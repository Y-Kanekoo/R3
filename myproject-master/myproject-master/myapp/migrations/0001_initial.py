# Generated by Django 5.1.2 on 2024-11-14 05:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyReportMorning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sleep_time', models.TimeField()),
                ('wake_time', models.TimeField()),
                ('sleep_quality', models.CharField(max_length=150)),
                ('had_dinner_yesterday', models.CharField(max_length=10)),
                ('had_breakfast_today', models.CharField(max_length=10)),
                ('medicine_time', models.CharField(max_length=10)),
                ('current_condition', models.CharField(max_length=10)),
                ('current_condition_other', models.TextField(blank=True, null=True)),
                ('anxiety_level', models.CharField(max_length=10)),
                ('current_emotion', models.CharField(max_length=10)),
                ('communication_willingness', models.CharField(max_length=10)),
                ('physical_condition', models.CharField(max_length=10)),
                ('concentration_level', models.CharField(max_length=10)),
                ('physical_discomfort', models.CharField(max_length=10)),
                ('self_esteem', models.CharField(max_length=10)),
                ('willingness_to_depend', models.CharField(max_length=10)),
                ('feeling_needed', models.CharField(max_length=10)),
                ('other_symptoms', models.TextField(blank=True, null=True)),
                ('need_work_accommodation', models.CharField(max_length=20)),
                ('need_work_accommodation_other', models.TextField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('recovery_routine', models.TextField(blank=True, null=True)),
                ('emotional_stability_after_self', models.IntegerField()),
            ],
            options={
                'db_table': 'daily_report_mornings',
            },
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('morning', '朝日報'), ('evening', '夕日報')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('answer_type', models.CharField(choices=[('select', '選択式'), ('text', '自由記述'), ('time_field', '時間選択')], default='multiple_choice', max_length=50)),
                ('options', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('employee_type', models.CharField(choices=[('admin', 'Admin'), ('general', 'General')], default='general', max_length=10)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'myapp_user',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('employee_type', models.CharField(choices=[('admin', 'Admin'), ('general', 'General')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DailyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_datetime', models.DateTimeField()),
                ('report_type', models.CharField(choices=[('morning', 'Morning'), ('evening', 'Evening')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.employee')),
            ],
            options={
                'db_table': 'daily_reports',
                'ordering': ['report_datetime'],
            },
        ),
        migrations.CreateModel(
            name='DailyReportAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('daily_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.dailyreport')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.questionnaire')),
            ],
            options={
                'db_table': 'daily_report_answers',
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_text', models.CharField(max_length=100)),
                ('option_value', models.IntegerField()),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.questionnaire')),
            ],
            options={
                'db_table': 'questionnaire_options',
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireThreshold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threshold_min', models.IntegerField(blank=True, null=True)),
                ('threshold_max', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.employee')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.questionnaire')),
            ],
            options={
                'db_table': 'questionnaire_thresholds',
                'unique_together': {('employee', 'questionnaire')},
            },
        ),
    ]
